name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run linter
        run: pnpm -w run lint
        continue-on-error: true
      
      - name: Type check
        run: pnpm -w run type-check
      
      - name: Run tests
        run: pnpm test
        continue-on-error: true
      
      - name: Build all packages
        run: pnpm -w run build
      
      - name: Build Chrome Extension
        run: |
          cd apps/chrome-extension
          pnpm build
          
          # Verify manifest.json exists
          if [ ! -f "dist/manifest.json" ]; then
            echo "Error: manifest.json not found in dist/"
            exit 1
          fi
          
          # Verify required files exist
          for file in background.js sidepanel.js popup.js; do
            if [ ! -f "dist/$file" ]; then
              echo "Error: $file not found in dist/"
              exit 1
            fi
          done
          
          echo "âœ… Chrome Extension build successful!"
      
      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v3
        with:
          name: chrome-extension-dev-build
          path: apps/chrome-extension/dist/
          retention-days: 7